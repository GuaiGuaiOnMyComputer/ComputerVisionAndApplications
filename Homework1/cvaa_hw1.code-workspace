{
	"folders": [
		{
			"path": "."
		}
	],
	"settings": {
		"git.repositoryScanMaxDepth": 1,
		"git.autoRepositoryDetection": "openEditors",
		"git.detectSubmodules": false,
		"files.associations": {
			"atomic": "cpp"
		},
		"dotnet.defaultSolution": "disable",
		"C_Cpp.default.includePath": [
			"${workspaceFolder}\\dep\\opencv\\include",
			"${workspaceFolder}\\build",
			"${workspaceFolder}\\dep\\opencv\\modules\\core\\include",
			"${workspaceFolder}\\dep\\opencv\\modules\\highgui\\include",
			"${workspaceFolder}\\dep\\opencv\\modules\\imgcodecs\\include",
			"${workspaceFolder}\\dep\\opencv\\modules\\videoio\\include",
			"${workspaceFolder}\\build\\lib"
		],
	},
	"launch": {
		"configurations": [
			
			{
				"name": "(gdb) Windows Launch",
				"type": "cppdbg",
				"request": "launch",
				"program": "${workspaceFolder}\\dist\\${workspaceFolderBasename}.exe",
				"args": [],
				"stopAtEntry": false,
				"cwd": "${workspaceFolder}\\dist",
				"environment": [],
				"preLaunchTask": "g++ windows compile current homework",
				"externalConsole": false,
				"MIMode": "gdb",
				"miDebuggerPath": "C:\\Program Files\\MinGw\\mingw64\\bin\\gdb.exe",
				"setupCommands": [
					{
						"description": "Enable pretty-printing for gdb",
						"text": "-enable-pretty-printing",
						"ignoreFailures": true
					},
					{
						"description": "Set Disassembly Flavor to Intel",
						"text": "-gdb-set disassembly-flavor intel",
						"ignoreFailures": true
					}
				]
			},
			{
				"name": "(gdb) Windows Launch any file",
				"type": "cppdbg",
				"request": "launch",
				"program": "${workspaceFolder}\\${fileBasenameNoExtension}.exe",
				"args": [],
				"stopAtEntry": true,
				"cwd": "${workspaceFolder}",
				"environment": [],
				"preLaunchTask": "g++ windows compile current file without dependencies.",
				"externalConsole": false,
				"MIMode": "gdb",
				"miDebuggerPath": "C:\\Program Files\\MinGw\\mingw64\\bin\\gdb.exe",
				"setupCommands": [
					{
						"description": "Enable pretty-printing for gdb",
						"text": "-enable-pretty-printing",
						"ignoreFailures": true
					},
					{
						"description": "Set Disassembly Flavor to Intel",
						"text": "-gdb-set disassembly-flavor intel",
						"ignoreFailures": true
					}
				]
			}
		]
	},

	"tasks": {
		"version": "2.0.0",
		"tasks": [
			{
				"label": "g++ windows compile current homework",
				"type": "shell",
				"command": "C:\\Program Files\\MinGw\\mingw64\\bin\\g++.exe",
				"args": [
					"${workspaceFolder}\\src\\main.cpp",
					"-g",
					"-D _DEBUG WIN32",
					"-I", "${workspaceFolder}\\dep\\opencv\\include",
					"-I", "${workspaceFolder}\\build",
					"-I", "${workspaceFolder}\\dep\\opencv\\modules\\core\\include",
					"-I", "${workspaceFolder}\\dep\\opencv\\modules\\highgui\\include",
					"-I", "${workspaceFolder}\\dep\\opencv\\modules\\imgcodecs\\include",
					"-I", "${workspaceFolder}\\dep\\opencv\\modules\\videoio\\include",
					"-L", "${workspaceFolder}\\build\\bin",
					"-llibopencv_core490",
					"-llibopencv_highgui490",
					"-llibopencv_video490",
					"-llibopencv_imgcodecs490",
					"-o", "${workspaceFolder}\\dist\\${workspaceFolderBasename}.exe",
				],
				"group": "build",
			},
			{
				"label": "copy library dependencies to dist folder",
				"type": "shell",
				"command": "cp",
				"args": [
					"${workspaceFolder}\\build\\bin\\*",
					"${workspaceFolder}\\dist"
				]
			},
			{
				"label": "copy asset dependencies to dist folder",
				"type": "shell",
				"command": "cp",
				"args": [
					"${workspaceFolder}\\asset\\*",
					"${workspaceFolder}\\dist\\asset\\"
				]
			},
			{
				"label": "g++ windows compile current file without dependencies",
				"type": "shell",
				"command": "C:\\Program Files\\MinGw\\mingw64\\bin\\g++.exe",
				"args": [
					"${workspaceFolder}\\${fileBasenameNoExtension}.cpp",
					"-o", "${workspaceFolder}\\${fileBasenameNoExtension}.exe",
				],
				"group": "build",
			},
			{
				"label": "g++ compile and copy dependencies to dist folder",
				"dependsOn": [
					"g++ windows compile current homework",
					"copy library dependencies to dist folder",
					"copy asset dependencies to dist folder"
				],
				"dependsOrder": "sequence"
			}
		]
	}

}